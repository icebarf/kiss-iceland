#!/bin/sh

PREFIX="/usr/local/arm-none-eabi/"
mkdir -p "$DESTDIR$PREFIX"
mkdir -p "$DESTDIR$PREFIX/bin"
mkdir -p "$DESTDIR$PREFIX/lib"
mkdir -p "$DESTDIR$PREFIX/include"

TARGET="arm-none-eabi"

# Ad-hoc solution for building a minimal gcc targetting
# arm-none-eabi platform so we can build newlib which
# will build arm-none-eabi-gcc.
bootstrap="0"
if [ -z "$(command -v arm-eabi-none-gcc)" ]; then
		bootstrap="1"
fi

if [ $bootstrap = "1" ]; then
		# Bunch of setup
		GCC_VER="13.1.0"
		GCC_FILE="gcc-$GCC_VER"
		cd "$GCC_FILE"
		mkdir gcc-build-arm-none-eabi
		cp -RpP "${DESTDIR}${PREFIX}" gcc-build-arm-none-eabi
		
		TEMP_LDFLAGS="${LDFLAGS} -Wl, --disable-dynamicbase"
		./configure --prefix=/ \
								--target="$TARGET" \
								--enable-languages=c \
								--disable-nls \
								--disable-libssp \
								--disable-shared \
								--disable-libgomp \
								--disable-werror \
								--disable-lto \
								--disable-libffi \
								--disable-decimal-float \
								--disable-libmudflap \
								--disable-libquadmath \
								--disable-libstdcxx-pch \
								--disable-libsanitizer \
								--disable-tls \
								--enable-multilib \
								--enable-interwork \
								--without-headers \
								--with-libelf \
								--with-newlib \
								--with-multilib-list=rmprofile \
								--with-host-libstdcxx="-static-libgcc -Wl, -Bstatic, -lstdc++, -Bdynamic -lm" \
								--with-sysroot="$PREFIX" \
								--with-build-sysroot="$PWD/gcc-build-$TARGET" \
								--with-build-time-tools="$PREFIX/bin" \
								LDFLAGS="$TEMP_LDFLAGS"
		make all-gcc
		make DESTDIR="$PWD/gcc-build-$TARGET" install-gcc

		export PATH="$PWD/gcc-build-$TARGET:$PATH"

		export AR="$TARGET-ar"
		export CC="$TARGET-gcc"
		export CXX="$TARGET-g++"
		export NM="$TARGET-nm"
		export RANLIB="$TARGET-ranlib"

fi


./configure --prefix="$PREFIX" \
						--host=x86_64-pc-linux-gnu \
						--target=arm-none-eabi \
						--enable-newlib-io-long-long \
						--enable-newlib-io-c99-formats \
						--enable-newlib-register-fini \
						--enable-newlib-retargetable-locking \
						--disable-newlib-supplied-syscalls \
						--disable-nls
make
make DESTDIR="$1" install

find "${DESTDIR}${PREFIX}/lib" \( -name "*.a" -or -name "*.o" \) -exec arm-none-eabi-objcopy -R .comment -R .note -R .debug_info -R .debug_aranges -R .debug_pubnames -R .debug_pubtypes -R .debug_abbrev -R .debug_line -R .debug_str -R .debug_ranges -R .debug_loc '{}' \;
